<?php

/**
 * @file
 * Contains install and update functions for menu_admin_per_menu module.
 */

/**
 * Implements hook_install().
 */
// function reseau_mod_up_formation_install() {
//   // Set module weight bigger than menu_ui module.
//   module_set_weight('reseau_mod_up_formation', 3);
// }


use Drupal\Component\Serialization\Yaml;
use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 */

 function getData()
{
//Liste de type de contenus autorisés
$contentTypes = [
  'actualite',
  'evenement',
  'formation',
  'page',
  'structure'
];

// On crée la liste des permissions
$permissionstoGrant = [];

foreach ($contentTypes as $contentType) {
  $permissionstoGrant[] = "delete $contentType revisions";
  $permissionstoGrant[] = "revert $contentType revisions";
  $permissionstoGrant[] = "view $contentType revisions";
}

//Liste des roles
$rolestoGrant = [
  'webmaster_cfapag',
  'webmaster_greta_guadeloupe',
  'webmaster_gipdaifi',
  'webmaster_greta_sxmsbh',
  'webmaster_cfasbh',
  'webmaster_reseau'
];

return [$permissionstoGrant, $rolestoGrant ];
}

function reseau_mod_up_revision_install()
{
  module_set_weight('reseau_mod_up_revision', 3);
  
  /*// on passe par un hook_install pour mettre à jour les config déjà existantes
  $config_files = [
    'node.type.formation',
    'node.type.evenement',
  ];

  foreach ($config_files as $config_id) {
    $raw_data = file_get_contents(drupal_get_path('module', 'reseau_mod_up_revision') . '/config/hook_install/' . $config_id . '.yml');
    \Drupal::service('config.factory')->getEditable($config_id)
      ->setData(Yaml::decode($raw_data))
      ->save();
    // dsm(Yaml::decode($raw_data));
  }
  [$permissionstoGrant,$rolestoGrant] =  getData();
  
  foreach ($rolestoGrant as $roletoGrant) {

    $role_object = Role::load($roletoGrant);
    $role_object->grantPermission('gerer les revisions');

    foreach ($permissionstoGrant as $permission) {
      $role_object->grantPermission($permission);
    }

    $role_object->save();
  }
  */
}


function reseau_mod_up_revision_uninstall()
{
/*  [$permissionstoGrant,$rolestoGrant] =  getData();
  
  foreach ($rolestoGrant as $roletoGrant) {

    $role_object = Role::load($roletoGrant);
    // $role_object->revokePermission('gerer les revisions');

    foreach ($permissionstoGrant as $permission) {
      $role_object->revokePermission($permission);
    }

    $role_object->save();
  }
  */
}